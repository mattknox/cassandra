#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


class Column_t
  include ::Thrift::Struct
  COLUMNNAME = 1
  VALUE = 2
  TIMESTAMP = 3

  ::Thrift::Struct.field_accessor self, :columnName, :value, :timestamp
  FIELDS = {
    COLUMNNAME => {:type => ::Thrift::Types::STRING, :name => 'columnName'},
    VALUE => {:type => ::Thrift::Types::STRING, :name => 'value'},
    TIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'timestamp'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class Batch_mutation_t
  include ::Thrift::Struct
  TABLE = 1
  KEY = 2
  CFMAP = 3

  ::Thrift::Struct.field_accessor self, :table, :key, :cfmap
  FIELDS = {
    TABLE => {:type => ::Thrift::Types::STRING, :name => 'table'},
    KEY => {:type => ::Thrift::Types::STRING, :name => 'key'},
    CFMAP => {:type => ::Thrift::Types::MAP, :name => 'cfmap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => Column_t}}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class SuperColumn_t
  include ::Thrift::Struct
  NAME = 1
  COLUMNS = 2

  ::Thrift::Struct.field_accessor self, :name, :columns
  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    COLUMNS => {:type => ::Thrift::Types::LIST, :name => 'columns', :element => {:type => ::Thrift::Types::STRUCT, :class => Column_t}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class Batch_mutation_super_t
  include ::Thrift::Struct
  TABLE = 1
  KEY = 2
  CFMAP = 3

  ::Thrift::Struct.field_accessor self, :table, :key, :cfmap
  FIELDS = {
    TABLE => {:type => ::Thrift::Types::STRING, :name => 'table'},
    KEY => {:type => ::Thrift::Types::STRING, :name => 'key'},
    CFMAP => {:type => ::Thrift::Types::MAP, :name => 'cfmap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => SuperColumn_t}}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class CqlResult_t
  include ::Thrift::Struct
  ERRORCODE = 1
  ERRORTXT = 2
  RESULTSET = 3

  ::Thrift::Struct.field_accessor self, :errorCode, :errorTxt, :resultSet
  FIELDS = {
    ERRORCODE => {:type => ::Thrift::Types::I32, :name => 'errorCode'},
    ERRORTXT => {:type => ::Thrift::Types::STRING, :name => 'errorTxt'},
    RESULTSET => {:type => ::Thrift::Types::LIST, :name => 'resultSet', :element => {:type => ::Thrift::Types::MAP, :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class NotFoundException < ::Thrift::Exception
  include ::Thrift::Struct

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class InvalidRequestException < ::Thrift::Exception
  include ::Thrift::Struct
  def initialize(message=nil)
    super()
    self.why = message
  end

  def message; why end

  WHY = 1

  ::Thrift::Struct.field_accessor self, :why
  FIELDS = {
    WHY => {:type => ::Thrift::Types::STRING, :name => 'why'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class UnavailableException < ::Thrift::Exception
  include ::Thrift::Struct

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

end

