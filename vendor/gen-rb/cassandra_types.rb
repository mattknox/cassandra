#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module ConsistencyLevel
  ZERO = 0
  ONE = 1
  QUORUM = 2
  ALL = 3
  VALUE_MAP = {0 => "ZERO", 1 => "ONE", 2 => "QUORUM", 3 => "ALL"}
  VALID_VALUES = Set.new([ZERO, ONE, QUORUM, ALL]).freeze
end

class Column
  include ::Thrift::Struct
  NAME = 1
  VALUE = 2
  TIMESTAMP = 3

  ::Thrift::Struct.field_accessor self, :name, :value, :timestamp
  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    VALUE => {:type => ::Thrift::Types::STRING, :name => 'value'},
    TIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'timestamp'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class BatchMutation
  include ::Thrift::Struct
  KEY = 1
  CFMAP = 2

  ::Thrift::Struct.field_accessor self, :key, :cfmap
  FIELDS = {
    KEY => {:type => ::Thrift::Types::STRING, :name => 'key'},
    CFMAP => {:type => ::Thrift::Types::MAP, :name => 'cfmap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => Column}}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class SuperColumn
  include ::Thrift::Struct
  NAME = 1
  COLUMNS = 2

  ::Thrift::Struct.field_accessor self, :name, :columns
  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    COLUMNS => {:type => ::Thrift::Types::LIST, :name => 'columns', :element => {:type => ::Thrift::Types::STRUCT, :class => Column}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class BatchMutationSuper
  include ::Thrift::Struct
  KEY = 1
  CFMAP = 2

  ::Thrift::Struct.field_accessor self, :key, :cfmap
  FIELDS = {
    KEY => {:type => ::Thrift::Types::STRING, :name => 'key'},
    CFMAP => {:type => ::Thrift::Types::MAP, :name => 'cfmap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => SuperColumn}}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class CqlResult
  include ::Thrift::Struct
  ERROR_CODE = 1
  ERROR_TXT = 2
  RESULT_SET = 3

  ::Thrift::Struct.field_accessor self, :error_code, :error_txt, :result_set
  FIELDS = {
    ERROR_CODE => {:type => ::Thrift::Types::I32, :name => 'error_code'},
    ERROR_TXT => {:type => ::Thrift::Types::STRING, :name => 'error_txt'},
    RESULT_SET => {:type => ::Thrift::Types::LIST, :name => 'result_set', :element => {:type => ::Thrift::Types::MAP, :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class NotFoundException < ::Thrift::Exception
  include ::Thrift::Struct

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class InvalidRequestException < ::Thrift::Exception
  include ::Thrift::Struct
  def initialize(message=nil)
    super()
    self.why = message
  end

  def message; why end

  WHY = 1

  ::Thrift::Struct.field_accessor self, :why
  FIELDS = {
    WHY => {:type => ::Thrift::Types::STRING, :name => 'why'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class UnavailableException < ::Thrift::Exception
  include ::Thrift::Struct

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class ColumnParent
  include ::Thrift::Struct
  COLUMN_FAMILY = 3
  SUPER_COLUMN = 4

  ::Thrift::Struct.field_accessor self, :column_family, :super_column
  FIELDS = {
    COLUMN_FAMILY => {:type => ::Thrift::Types::STRING, :name => 'column_family'},
    SUPER_COLUMN => {:type => ::Thrift::Types::STRING, :name => 'super_column', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class ColumnPath
  include ::Thrift::Struct
  COLUMN_FAMILY = 3
  SUPER_COLUMN = 4
  COLUMN = 5

  ::Thrift::Struct.field_accessor self, :column_family, :super_column, :column
  FIELDS = {
    COLUMN_FAMILY => {:type => ::Thrift::Types::STRING, :name => 'column_family'},
    SUPER_COLUMN => {:type => ::Thrift::Types::STRING, :name => 'super_column', :optional => true},
    COLUMN => {:type => ::Thrift::Types::STRING, :name => 'column'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class SuperColumnPath
  include ::Thrift::Struct
  COLUMN_FAMILY = 3
  SUPER_COLUMN = 4

  ::Thrift::Struct.field_accessor self, :column_family, :super_column
  FIELDS = {
    COLUMN_FAMILY => {:type => ::Thrift::Types::STRING, :name => 'column_family'},
    SUPER_COLUMN => {:type => ::Thrift::Types::STRING, :name => 'super_column'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

class ColumnPathOrParent
  include ::Thrift::Struct
  COLUMN_FAMILY = 3
  SUPER_COLUMN = 4
  COLUMN = 5

  ::Thrift::Struct.field_accessor self, :column_family, :super_column, :column
  FIELDS = {
    COLUMN_FAMILY => {:type => ::Thrift::Types::STRING, :name => 'column_family'},
    SUPER_COLUMN => {:type => ::Thrift::Types::STRING, :name => 'super_column', :optional => true},
    COLUMN => {:type => ::Thrift::Types::STRING, :name => 'column', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

end

